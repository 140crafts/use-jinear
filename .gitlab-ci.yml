stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2

  JINEAR_CORE_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-core:${CI_COMMIT_SHORT_SHA}
  JINEAR_CORE_IMAGE_LATEST: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-core:latest

  JINEAR_WEB_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-web:${CI_COMMIT_SHORT_SHA}
  JINEAR_WEB_IMAGE_LATEST: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-web:latest

  JINEAR_CADDY_CUSTOM_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-caddy-custom:${CI_COMMIT_SHORT_SHA}
  JINEAR_CADDY_CUSTOM_IMAGE_LATEST: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-caddy-custom:latest

  JINEAR_CADDY_MANAGER_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-caddy-manager:${CI_COMMIT_SHORT_SHA}
  JINEAR_CADDY_MANAGER_IMAGE_LATEST: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-caddy-manager:latest

  JINEAR_MESSAGE_SERVICE_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-message-service:${CI_COMMIT_SHORT_SHA}
  JINEAR_MESSAGE_SERVICE_IMAGE_LATEST: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-message-service:latest

  JINEAR_PAGES_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-pages:${CI_COMMIT_SHORT_SHA}
  JINEAR_PAGES_IMAGE_LATEST: registry.gitlab.com/${CI_PROJECT_PATH}/jinear-pages:latest

.core_changes: &core_changes
  changes:
    - jinear-core/**/*
    - .gitlab-ci.yml

.web_changes: &web_changes
  changes:
    - jinear-web/**/*
    - .gitlab-ci.yml

.caddy_custom_changes: &caddy_custom_changes
  changes:
    - jinear-caddy-custom/**/*
    - .gitlab-ci.yml

.caddy_manager_changes: &caddy_manager_changes
  changes:
    - jinear-caddy-manager/**/*
    - .gitlab-ci.yml

.message_service_changes: &message_service_changes
  changes:
    - jinear-message-service/**/*
    - .gitlab-ci.yml

.pages_changes: &pages_changes
  changes:
    - jinear-pages/**/*
    - .gitlab-ci.yml

.docker_setup: &docker_setup
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com

core:build:
  <<: *docker_setup
  stage: build
  script:
    - cd jinear-core
    - docker build -t ${JINEAR_CORE_IMAGE} .
    - docker push ${JINEAR_CORE_IMAGE}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *core_changes
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *core_changes

core:deploy:
  <<: *docker_setup
  stage: deploy
  script:
    - docker pull ${JINEAR_CORE_IMAGE}
    - docker tag ${JINEAR_CORE_IMAGE} ${JINEAR_CORE_IMAGE_LATEST}
    - docker push ${JINEAR_CORE_IMAGE_LATEST}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *core_changes
  needs:
    - core:build

web:build:
  <<: *docker_setup
  stage: build
  script:
    - cd jinear-web
    - docker build -t ${JINEAR_WEB_IMAGE} .
    - docker push ${JINEAR_WEB_IMAGE}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *web_changes
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *web_changes

web:deploy:
  <<: *docker_setup
  stage: deploy
  script:
    - docker pull ${JINEAR_WEB_IMAGE}
    - docker tag ${JINEAR_WEB_IMAGE} ${JINEAR_WEB_IMAGE_LATEST}
    - docker push ${JINEAR_WEB_IMAGE_LATEST}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *web_changes
  needs:
    - web:build


caddy-custom:build:
  <<: *docker_setup
  stage: build
  script:
    - cd jinear-caddy-custom
    - docker build -t ${JINEAR_CADDY_CUSTOM_IMAGE} .
    - docker push ${JINEAR_CADDY_CUSTOM_IMAGE}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *caddy_custom_changes
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *caddy_custom_changes

caddy-custom:deploy:
  <<: *docker_setup
  stage: deploy
  script:
    - docker pull ${JINEAR_CADDY_CUSTOM_IMAGE}
    - docker tag ${JINEAR_CADDY_CUSTOM_IMAGE} ${JINEAR_CADDY_CUSTOM_IMAGE_LATEST}
    - docker push ${JINEAR_CADDY_CUSTOM_IMAGE_LATEST}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *caddy_custom_changes
  needs:
    - caddy-custom:build


caddy-manager:build:
  <<: *docker_setup
  stage: build
  script:
    - cd jinear-caddy-manager
    - docker build -t ${JINEAR_CADDY_MANAGER_IMAGE} .
    - docker push ${JINEAR_CADDY_MANAGER_IMAGE}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *caddy_manager_changes
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *caddy_manager_changes

caddy-manager:deploy:
  <<: *docker_setup
  stage: deploy
  script:
    - docker pull ${JINEAR_CADDY_MANAGER_IMAGE}
    - docker tag ${JINEAR_CADDY_MANAGER_IMAGE} ${JINEAR_CADDY_MANAGER_IMAGE_LATEST}
    - docker push ${JINEAR_CADDY_MANAGER_IMAGE_LATEST}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *caddy_manager_changes
  needs:
    - caddy-manager:build


message-service:build:
  <<: *docker_setup
  stage: build
  script:
    - cd jinear-message-service
    - docker build -t ${JINEAR_MESSAGE_SERVICE_IMAGE} .
    - docker push ${JINEAR_MESSAGE_SERVICE_IMAGE}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *message_service_changes
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *message_service_changes

message-service:deploy:
  <<: *docker_setup
  stage: deploy
  script:
    - docker pull ${JINEAR_MESSAGE_SERVICE_IMAGE}
    - docker tag ${JINEAR_MESSAGE_SERVICE_IMAGE} ${JINEAR_MESSAGE_SERVICE_IMAGE_LATEST}
    - docker push ${JINEAR_MESSAGE_SERVICE_IMAGE_LATEST}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *message_service_changes
  needs:
    - message-service:build

pages:build:
  <<: *docker_setup
  stage: build
  script:
    - cd jinear-pages
    - docker build -t ${JINEAR_PAGES_IMAGE} .
    - docker push ${JINEAR_PAGES_IMAGE}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *pages_changes
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *pages_changes

pages:deploy:
  <<: *docker_setup
  stage: deploy
  script:
    - docker pull ${JINEAR_PAGES_IMAGE}
    - docker tag ${JINEAR_PAGES_IMAGE} ${JINEAR_PAGES_IMAGE_LATEST}
    - docker push ${JINEAR_PAGES_IMAGE_LATEST}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      <<: *pages_changes
  needs:
    - pages:build
